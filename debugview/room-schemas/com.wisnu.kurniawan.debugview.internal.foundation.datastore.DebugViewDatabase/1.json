{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "70c2f962346337ed9bed8cbe7a32df9e",
    "entities": [
      {
        "tableName": "AnalyticDb",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`analytic_id` TEXT NOT NULL, `analytic_tag` TEXT NOT NULL, `analytic_isRecording` INTEGER NOT NULL, `analytic_createdAt` INTEGER NOT NULL, `analytic_updatedAt` INTEGER, PRIMARY KEY(`analytic_id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "analytic_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "tag",
            "columnName": "analytic_tag",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isRecording",
            "columnName": "analytic_isRecording",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "analytic_createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "analytic_updatedAt",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "analytic_id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_AnalyticDb_analytic_tag",
            "unique": true,
            "columnNames": [
              "analytic_tag"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_AnalyticDb_analytic_tag` ON `${TABLE_NAME}` (`analytic_tag`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "EventDb",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`event_id` TEXT NOT NULL, `event_analyticId` TEXT NOT NULL, `event_name` TEXT NOT NULL, `event_properties` TEXT NOT NULL, `event_createdAt` INTEGER NOT NULL, PRIMARY KEY(`event_id`), FOREIGN KEY(`event_analyticId`) REFERENCES `AnalyticDb`(`analytic_id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "event_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "analyticId",
            "columnName": "event_analyticId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "event_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "properties",
            "columnName": "event_properties",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "event_createdAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "event_id"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_EventDb_event_id",
            "unique": false,
            "columnNames": [
              "event_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_EventDb_event_id` ON `${TABLE_NAME}` (`event_id`)"
          },
          {
            "name": "index_EventDb_event_analyticId",
            "unique": false,
            "columnNames": [
              "event_analyticId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_EventDb_event_analyticId` ON `${TABLE_NAME}` (`event_analyticId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "AnalyticDb",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "event_analyticId"
            ],
            "referencedColumns": [
              "analytic_id"
            ]
          }
        ]
      },
      {
        "ftsVersion": "FTS4",
        "ftsOptions": {
          "tokenizer": "simple",
          "tokenizerArgs": [],
          "contentTable": "EventDb",
          "languageIdColumnName": "",
          "matchInfo": "FTS4",
          "notIndexedColumns": [],
          "prefixSizes": [],
          "preferredOrder": "ASC"
        },
        "contentSyncTriggers": [
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_EventFtsDb_BEFORE_UPDATE BEFORE UPDATE ON `EventDb` BEGIN DELETE FROM `EventFtsDb` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_EventFtsDb_BEFORE_DELETE BEFORE DELETE ON `EventDb` BEGIN DELETE FROM `EventFtsDb` WHERE `docid`=OLD.`rowid`; END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_EventFtsDb_AFTER_UPDATE AFTER UPDATE ON `EventDb` BEGIN INSERT INTO `EventFtsDb`(`docid`, `event_name`, `event_properties`) VALUES (NEW.`rowid`, NEW.`event_name`, NEW.`event_properties`); END",
          "CREATE TRIGGER IF NOT EXISTS room_fts_content_sync_EventFtsDb_AFTER_INSERT AFTER INSERT ON `EventDb` BEGIN INSERT INTO `EventFtsDb`(`docid`, `event_name`, `event_properties`) VALUES (NEW.`rowid`, NEW.`event_name`, NEW.`event_properties`); END"
        ],
        "tableName": "EventFtsDb",
        "createSql": "CREATE VIRTUAL TABLE IF NOT EXISTS `${TABLE_NAME}` USING FTS4(`event_name` TEXT NOT NULL, `event_properties` TEXT NOT NULL, content=`EventDb`)",
        "fields": [
          {
            "fieldPath": "name",
            "columnName": "event_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "properties",
            "columnName": "event_properties",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "FilterConfigDb",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`filter_config_id` TEXT NOT NULL, `filter_config_text` TEXT NOT NULL, `filter_config_type` TEXT NOT NULL, PRIMARY KEY(`filter_config_id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "filter_config_id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "text",
            "columnName": "filter_config_text",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "filter_config_type",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "filter_config_id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '70c2f962346337ed9bed8cbe7a32df9e')"
    ]
  }
}